#:kivy 2.3.0
# widgets.kv

<Box1@BoxLayout>:
    orientation: 'vertical'
    size_hint_x: None
    width: 600
    size_hint_y: None
    height: self.minimum_height  # Adjust height based on content
    padding: 20, 10, 20, 10
    spacing: 10

    canvas.before:
        Color:
            rgba: 0.42, 0.42, 0.42, 1
        RoundedRectangle:
            pos: self.pos[0]+5, self.pos[1]+5
            size: self.size[0]-10, self.size[1]-10
            radius: [10]
        Color:
            rgba: 0.13, 0.13, 0.13, 1
        RoundedRectangle:
            pos: self.pos[0]+6, self.pos[1]+6
            size: self.size[0]-12, self.size[1]-12
            radius: [10]
        

<Box2@BoxLayout>:
    orientation: 'vertical'
    size_hint_x: 1
    size_hint_y: None
    height: self.minimum_height  # Adjust height based on content
    padding: 20, 10, 20, 10
    spacing: 10

    canvas.before:
        Color:
            rgba: 0.42, 0.42, 0.42, 1
        RoundedRectangle:
            pos: self.pos[0]+5, self.pos[1]+5
            size: self.size[0]-10, self.size[1]-10
            radius: [5]
        Color:
            rgba: 0.23, 0.23, 0.23, 1
        RoundedRectangle:
            pos: self.pos[0]+6, self.pos[1]+6
            size: self.size[0]-12, self.size[1]-12
            radius: [5]

<Heading1@Label>:
    size_hint_y: None
    height: 30  # Fixed height
    text_size: self.size
    halign: 'left'
    valign: 'bottom'
    font_size: 20
    color: 0.42, 0.42, 0.42, 1


<Heading2@Heading1>:
    height: 25  # Fixed height
    font_size: 15

<TableHeader@Label>:
    size_hint_y: None
    height: 25
    bold: True
    text_size: self.size
    halign: 'center'

<TableRow@Label>:
    size_hint_y: None
    height: 30

<PropertyTag@Label>:
    size_hint_x: None
    width: 200  # Fixed width
    text_size: self.size
    halign: 'right'
    valign: 'middle'

<Randomize@BoxLayout>:
    generate_palette: lambda: None # Function that does nothing, but we can set to another function, once class is used elsewhere

    orientation: 'horizontal'
    size_hint_y: None
    height: 30  # Fixed row height
    spacing: 10
    
    Button:
        text: 'Generate new palette'
        on_press: root.generate_palette()

<Cosine@BoxLayout>:
    generate_palette: lambda *args: None # Function that does nothing, but we can set to another function, once class is used elsewhere

    orientation: 'horizontal'
    size_hint_y: None
    height: 30  # Fixed row height
    spacing: 10
    
    PropertyTag:
        text: 'Red offset:'
    
    Slider:
        id: a_r
        min: -1
        max: 1
        step: 0.1
        orientation: 'horizontal'
        on_value: root.generate_palette(self, a_r.value, b_r.value, c_r.value, d_r.value)
    
    PropertyTag:
        text: 'Red amplitude:'
    
    Slider:
        id: b_r
        min: -1
        max: 1
        step: 0.1
        orientation: 'horizontal'
        on_value: root.generate_palette(self, a_r.value, b_r.value, c_r.value, d_r.value)
    
    PropertyTag:
        text: 'Red frequency:'
    
    Slider:
        id: c_r
        min: -1
        max: 1
        step: 0.1
        orientation: 'horizontal'
        on_value: root.generate_palette(self, a_r.value, b_r.value, c_r.value, d_r.value)
    
    PropertyTag:
        text: 'Red phase:'
    
    Slider:
        id: d_r
        min: -1
        max: 1
        step: 0.1
        orientation: 'horizontal'
        on_value: root.generate_palette(self, a_r.value, b_r.value, c_r.value, d_r.value)